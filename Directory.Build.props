<Project>
  <PropertyGroup>
    <VersionPrefix>14.2.0</VersionPrefix>

    <Authors>Rico Suter</Authors>
    <Copyright>Copyright Â© Rico Suter, 2023</Copyright>

    <Description>NSwag: The OpenAPI/Swagger API toolchain for .NET and TypeScript</Description>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>http://NSwag.org</PackageProjectUrl>
    <PackageTags>OpenAPI Swagger AspNetCore Documentation CodeGen TypeScript WebApi AspNet</PackageTags>
    <PackageIcon>NuGetIcon.png</PackageIcon>
    <Company />

    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>../NSwag.snk</AssemblyOriginatorKeyFile>

    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/RicoSuter/NSwag.git</RepositoryUrl>

    <LangVersion>latest</LangVersion>

    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <!-- suppress NuGet audit checks being errors -->
    <WarningsNotAsErrors>NU1901,NU1902,NU1903,NU1904</WarningsNotAsErrors>

    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <DebugSymbols>true</DebugSymbols>

    <!-- reduce package size by only including english resources -->
    <SatelliteResourceLanguages>en-US</SatelliteResourceLanguages>

    <UseArtifactsOutput>true</UseArtifactsOutput>

  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\assets\NuGetIcon.png" Pack="true" Visible="false" PackagePath="" />
  </ItemGroup>

  <PropertyGroup Label="Analyzer settings">
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisLevel>latest-Recommended</AnalysisLevel>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <!--
      [IDE0005] Using directive is unnecessary
      [IDE0011] Add braces to 'if' statement
      [IDE0008] Use explicit type instead of 'var'
      [IDE0017] Object initialization can be simplified
      [IDE0019] Use pattern matching
      [IDE0021] Use block body for constructor
      [IDE0022] Use block body for method
      [IDE0025] Use expression body for property
      [IDE0027] Use expression body for accessor
      [IDE0028] Collection initialization can be simplified
      [IDE0029] Null check can be simplified
      [IDE0032] Use auto property
      [IDE0039] Use local function
      [IDE0040] Accessibility modifiers required
      [IDE0044] Make field readonly
      [IDE0045] 'if' statement can be simplified
      [IDE0046] 'if' statement can be simplified
      [IDE0055] Fix formatting
      [IDE0056] Indexing can be simplified
      [IDE0057] Substring can be simplified
      [IDE0059] Unnecessary assignment of a value
      [IDE0060] Remove unused parameter
      [IDE0061] Use block body for local function
      [IDE0063] 'using' statement can be simplified
      [IDE0074] Use compound assignment
      [IDE0078] Use pattern matching
      [IDE0083] Use pattern matching
      [IDE0090] 'new' expression can be simplified
      [IDE0100] Remove redundant equality
      [IDE0130] Namespace does not match folder structure
      [IDE0160] Convert to block scoped namespace
      [IDE0200] Lambda expression can be removed
      [IDE0260] Use pattern matching
      [IDE0270] Null check can be simplified
      [IDE0290] Use primary constructor
      [IDE0300] Collection initialization can be simplified
      [IDE0301] Collection initialization can be simplified
      [IDE0305] Collection initialization can be simplified
      [IDE0330] Use 'System.Threading.Lock'
      [IDE1005] Delegate invocation can be simplified
      [CA1200] Avoid using cref tags with a prefix
      [CA1304] The behavior of 'string.ToUpper()' could vary based on the current user's locale settings
      [CA1305] The behavior of 'int.ToString()' could vary based on the current user's locale settings
      [CA1310] The behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings
      [CA1311] The behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings
      [CA1507] Use nameof in place of string literal
      [CA1510] Use 'ArgumentNullException.ThrowIfNull' instead of explicitly throwing a new exception instance
      [CA1514] 'System.ReadOnlySpan<char>.Slice(int, int)' uses a redundant length calculation that can be removed
      [CA1710] Rename to end in either 'Dictionary' or 'Collection'
      [CA1716] rename parameter property so that it no longer conflicts with the reserved language keyword
      [CA1720] Identifier 'xxx' contains type name
      [CA1725] Overriden parameter name mismatch
      [CA1805] Member is explicitly initialized to its default value
      [CA1827] Count() is used where Any() could be used instead to improve performance
      [CA1834] Use 'StringBuilder.Append(char)' instead of 'StringBuilder.Append(string)' when the input is a constant unit string
      [CA1845] Use span-based 'string.Concat' and 'AsSpan' instead of 'Substring'
      [CA1847] Use 'string.Contains(char)' instead of 'string.Contains(string)' - needs polyfill
      [CA1854] Prefer a 'TryGetValue' call over a Dictionary indexer access
      [CA1860] Prefer comparing 'Count' to 0 rather than using 'Any()'
      [CA1861] Prefer 'static readonly' fields over constant array arguments
      [CA1862] Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison
      [CA1865] Use 'string.StartsWith(char)' instead of 'string.StartsWith(string)'  - needs polyfill
      [CA1866] Use 'string.StartsWith(char)' instead of 'string.StartsWith(string)'  - needs polyfill
      [CA1870] Use a cached 'SearchValues' instance for improved searching performance
      [CA2249] Use 'string.Contains' instead of 'string.IndexOf' to improve readability -  needs polyfill
      [CA2263] Prefer the generic overload 'System.Enum.GetValues<TEnum>()'

      [SYSLIB0012] 'Assembly.CodeBase' is obsolete
    -->
    <NoWarn>$(NoWarn);IDE0005;IDE0008;IDE0011;IDE0017;IDE0019;IDE0021;IDE0022;IDE0025;IDE0027;IDE0028;IDE0029;IDE0032;IDE0039;IDE0040;IDE0044;IDE0045;IDE0046;IDE0055;IDE0056;IDE0057;IDE0059;IDE0060;IDE0061;IDE0063;IDE0074;IDE0078;IDE0083;IDE0090;IDE0100;IDE0130;IDE0160;IDE0200;IDE0260;IDE0270;IDE0290;IDE0300;IDE0305;IDE0301;IDE0330;IDE1005</NoWarn>
    <NoWarn>$(NoWarn);CA1200;CA1304;CA1305;CA1310;CA1311;CA1507;CA1510;CA1514;CA1710;CA1716;CA1720;CA1725;CA1805;CA1827;CA1834;CA1845;CA1847;CA1854;CA1860;CA1861;CA1862;CA1865;CA1866;CA1870;CA2249;CA2263;SYSLIB0012</NoWarn>
  </PropertyGroup>

</Project>
