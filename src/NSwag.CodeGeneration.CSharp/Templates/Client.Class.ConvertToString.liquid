{%              if GenerateNullableReferenceTypes -%}
private string ConvertToString(object? value, {{ GlobalSystemNamespaceAlias }}.Globalization.CultureInfo cultureInfo)
{%              else -%}
private string ConvertToString(object value, {{ GlobalSystemNamespaceAlias }}.Globalization.CultureInfo cultureInfo)
{%              endif -%}
{
    if (value == null)
    {
        return "";
    }

    if (value is {{ GlobalSystemNamespaceAlias }}.Enum)
    {
        var name = {{ GlobalSystemNamespaceAlias }}.Enum.GetName(value.GetType(), value);
        if (name != null)
        {
            var field = {{ GlobalSystemNamespaceAlias }}.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
            if (field != null)
            {
                var attribute = {{ GlobalSystemNamespaceAlias }}.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof({{ GlobalSystemNamespaceAlias }}.Runtime.Serialization.EnumMemberAttribute)) 
                    as {{ GlobalSystemNamespaceAlias }}.Runtime.Serialization.EnumMemberAttribute;
                if (attribute != null)
                {
                    return attribute.Value != null ? attribute.Value : name;
                }
            }

            var converted = {{ GlobalSystemNamespaceAlias }}.Convert.ToString({{ GlobalSystemNamespaceAlias }}.Convert.ChangeType(value, {{ GlobalSystemNamespaceAlias }}.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
            return converted == null ? string.Empty : converted;
        }
    }
    else if (value is bool) 
    {
        return {{ GlobalSystemNamespaceAlias }}.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
    }
    else if (value is byte[])
    {
        return {{ GlobalSystemNamespaceAlias }}.Convert.ToBase64String((byte[]) value);
    }
    else if (value is string[])
    {
        return string.Join(",", (string[])value);
    }
    else if (value.GetType().IsArray)
    {
        var valueArray = ({{ GlobalSystemNamespaceAlias }}.Array)value;
        var valueTextArray = new string[valueArray.Length];
        for (var i = 0; i < valueArray.Length; i++)
        {
            valueTextArray[i] = ConvertToString(valueArray.GetValue(i), cultureInfo);
        }
        return string.Join(",", valueTextArray);
    }

    var result = {{ GlobalSystemNamespaceAlias }}.Convert.ToString(value, cultureInfo);
    return result == null ? "" : result;
}
