{% if Framework.IsFetchOrAurelia -%}
return response.text().then((_responseText) => {
{% elsif Framework.Angular.UseHttpClient -%}
{%     if Framework.UseRxJs6 -%}
return blobToText(responseBlob).pipe({{ Framework.RxJs.ObservableMergeMapMethod }}({{ Framework.RxJs.ResponseTextProperty }} => {
{%     else -%}
return blobToText(responseBlob).flatMap({{ Framework.RxJs.ResponseTextProperty }} => {
{%     endif -%}
{% elsif operation.RequestAngularBlobs -%}
{%     if Framework.UseRxJs6 -%}
return blobToText(response.blob()).pipe({{ Framework.RxJs.ObservableMergeMapMethod }}({{ Framework.RxJs.ResponseTextProperty }} => {
{%     else -%}
return blobToText(response.blob()).flatMap({{ Framework.RxJs.ResponseTextProperty }} => {
{%     endif -%}
{% elsif operation.RequestAngularJSBlobs -%}
return blobToText(new Blob([response.data]), this.q).then({{ Framework.RxJs.ResponseTextProperty }} => {
{% elsif Framework.IsAngular -%}
const _responseText = response.text();
{% elsif Framework.IsAngularJS -%}
const _responseText = response.data;
{% elsif Framework.IsAxios -%}
const _responseText = response.data;
{% else -%}
const _responseText = xhr.responseText;
{% endif -%}
